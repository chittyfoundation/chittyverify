// Fortress Admin Dashboard (ChittyOS Frontend Bootstrap)

import { useEffect, useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Tabs, TabsList, TabsTrigger, TabsContent } from "@/components/ui/tabs";

export default function FortressAdmin() {
  const [output, setOutput] = useState(null);
  const [inputText, setInputText] = useState("");
  const [label, setLabel] = useState("default");
  const [loading, setLoading] = useState(false);
  const [activeTab, setActiveTab] = useState("ingest");

  async function runAgent(prompt: string, label: string) {
    setLoading(true);
    try {
      const ingestRes = await fetch("/ingest", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          "x-api-key": "TRUSTED_GATEWAY_KEY"
        },
        body: JSON.stringify({ content: prompt, label })
      });
      const { input_id } = await ingestRes.json();
      const runRes = await fetch(`/run/${input_id}`, { method: "POST" });
      const { output_file } = await runRes.json();
      const outRes = await fetch(`/output/${output_file}`);
      const out = await outRes.json();
      setOutput(out);
    } catch (err) {
      console.error("Agent failed:", err);
      setOutput({ error: err.toString() });
    }
    setLoading(false);
  }

  return (
    <div className="max-w-3xl mx-auto mt-10 p-4 space-y-6">
      <h1 className="text-3xl font-bold text-center">ðŸ§± Fortress Admin</h1>

      <Tabs defaultValue="ingest" onValueChange={setActiveTab}>
        <TabsList className="w-full grid grid-cols-2">
          <TabsTrigger value="ingest">Manual Input</TabsTrigger>
          <TabsTrigger value="preview">Last Output</TabsTrigger>
        </TabsList>

        <TabsContent value="ingest">
          <Card>
            <CardContent className="p-4 space-y-4">
              <Input
                placeholder="Prompt or file contents..."
                value={inputText}
                onChange={(e) => setInputText(e.target.value)}
              />
              <Input
                placeholder="Label"
                value={label}
                onChange={(e) => setLabel(e.target.value)}
              />
              <Button onClick={() => runAgent(inputText, label)} disabled={loading}>
                {loading ? "Running..." : "Run Agent"}
              </Button>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="preview">
          <Card>
            <CardContent className="p-4 text-sm whitespace-pre-wrap">
              {output ? (
                <>
                  <h3 className="text-lg font-semibold mb-2">Agent Output:</h3>
                  <pre>{JSON.stringify(output, null, 2)}</pre>
                </>
              ) : (
                <p>No output yet.</p>
              )}
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
}
