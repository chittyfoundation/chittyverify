version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: chittytimeline-db
    environment:
      POSTGRES_DB: chittytimeline
      POSTGRES_USER: chitty
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chitty -d chittytimeline"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chittytimeline-app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://chitty:${POSTGRES_PASSWORD:-changeme}@postgres:5432/chittytimeline
      SESSION_SECRET: ${SESSION_SECRET:-generate-a-secure-secret}
      CHITTYPM_API_URL: ${CHITTYPM_API_URL:-http://chittypm:5001/api}
      CHITTYPM_WS_URL: ${CHITTYPM_WS_URL:-ws://chittypm:5001/ws}
    ports:
      - "5000:5000"
    volumes:
      - uploads:/app/uploads
    restart: unless-stopped
    networks:
      - chitty-network

  # Optional: ChittyPM service for full ecosystem
  chittypm:
    image: chittyos/chittypm:latest
    container_name: chittypm
    environment:
      NODE_ENV: production
      PORT: 5001
      DATABASE_URL: postgresql://chitty:${POSTGRES_PASSWORD:-changeme}@postgres:5432/chittypm
    ports:
      - "5001:5001"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - chitty-network

  # Optional: Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: chittytimeline-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - chitty-network

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: chittytimeline-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - chitty-network

volumes:
  postgres_data:
  uploads:
  redis_data:

networks:
  chitty-network:
    driver: bridge